mainmenu "FluffyGC project Configuration"
source "buildsystem/Kconfig"

config PLACEHOLDER_FOR_STATIC_STUFF_UWU
  def_bool y
  #select BUILD_HAS_EXECUTABLE
  select BUILD_IS_LIBRARY
  #select BUILD_IS_KERNEL

config MAIN_DISABLED
  bool

menu General
  config VERSION_MAJOR
    int
    default 0

  config VERSION_MINOR
    int
    default 1

  config VERSION_PATCH
    int
    default 0

  config VERSION_LOCAL_VERSION
    string "Local version"
    default ""
    help
      Appended to the end of version string
  
  config STRICTLY_POSIX
    bool "Strict POSIX compliant"
    default y
    help
      Disable any non POSIX 2008 libc or
      platform specific API usage
endmenu

menu Memory
  config MEMORY_DEBUG
    bool "Enable option for debugging memory problems"
  
  menu "Small Object Cache"
    config SOC_USE_MALLOC
      bool "Use system malloc instead from cache"
      default y if MEMORY_DEBUG
      help
        This essentially bypass cache and use malloc instead if you are using
        ASAN, MSAN, Valgrind to debug memory problems. Or if your system's malloc
        is faster than SOC for small objects (<8 words) its safe to say Y.
        In most cases its usually slower than SOC.
        
        If in doubt, answer N
  endmenu
  
  menu "Heap allocator"
    config HEAP_USE_MALLOC
      bool "Use system malloc instead custom allocator"
      default y if MEMORY_DEBUG
      help
        Use system malloc to allow ASAN to catch heap access error
        
        If in doubt, answer N
    choice
      prompt "Free block finder type"
      default HEAP_FREE_BLOCK_BEST_FIT
      
      config HEAP_FREE_BLOCK_BEST_FIT
        bool "Best fit"
        help
          Slower allocation on slow path (when bump pointer method exhausted)
          but leads to less heap fragmentation 
      config HEAP_FREE_BLOCK_FIRST_FIT
        bool "First fit"
        help
          Faster allocation on slow path (when bump pointer method exhausted)
          but leads to more heap fragmentation
    endchoice
  endmenu
endmenu

menu "Managed heap"
  # Don't touch this yet
  config NUM_GENERATIONS
    int
    default 2
endmenu

menu Fuzzing
  config FUZZER
    bool
    select MAIN_DISABLED
  
  choice
    prompt "Fuzzer variant"
    depends on !BUILD_OVERRIDE_PROJECT_FLAGS
    
    config FUZZER_NONE
      bool "None"
    
    config FUZZER_LIBFUZZER
      bool "libFuzzer"
      select FUZZER
      help
        When using with ASAN for long time its
        recommended to use fork mode (`-fork=N`) 
        and use `quarantine_size_mb` to avoid
        unbounded RSS growth when there really
        no leaks due ASAN's quarantine
  endchoice
  
  choice
    prompt "Select subsystem to fuzz"
    depends on FUZZER
    
    config FUZZ_SOC
      bool "SOC allocator and deallocator"
    config FUZZ_HEAP
      bool "Heap allocator and deallocator"
  endchoice
endmenu

config DONT_START_SEPERATE_MAIN_THREAD
  bool "Don't start seperate main thread"
  default n
  
config API_ENABLE_V2
  bool "Enable version 2 API"
  default y
